Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

/ {
	keymap0: keymap {
		compatible = "zmk,keymap";

		default_layer {
            // | --- |   Q   |   W   |   E   |   R   |   T   |   Y   |   U   |   I   |   O   |   P   |  --- |
            // | --- |   A   |   S   |   D   |   F   |   G   |   H   |   J   |   K   |   L   |   /   |  --- |
            // | --- |   Z   |   X   |   C   |   V   |   B   |   N   |   M   |   ,   |   .   |       |  --- |
            // | --- |  ---  |  ---  | LAlt  |  Tab  | MO(1) | MO(1) | MO(2) | MO(3) |  ---  |  ---  |  --- | 
            bindings = <
            &none    &lt 2 Q     &kp W     &kp E         &kp R       &kp T         &kp Y       &kp U       &kp I       &kp O       &kp P           &none
            &none    &kp A       &kp S     &kp D         &kp F       &kp G         &kp H       &kp J       &kp K       &kp L       &kp FSLH        &none 
            &none    &mt LCTRL Z &kp X     &kp C         &kp V       &kp B         &kp N       &kp M       &kp COMMA   &KP_DOT     &mt RSHFT PG_DN &none
            &none    &none       &none     &mt LALT CAPS &kp TAB     &lt 1 SPACE   &lt 1 BSPC  &lt 2 ENTER &lt 3 PG_UP &none       &none           &none
            >;
		};

		fn1_layer {y*
            // | --- |   7   |   8   |   9   |   .   |   +   |   *   |   $   |   :   |   |   |   `   |  --- |
            // | --- |   4   |   5   |   6   |   0   |   -   |   /  // | --- |   1   |   2   |   3   |  BS   | P-Ent |  CAPS | #Spc  |   ,   |   .   | !#BS  |  --- |
            // | --- |  ---  |  ---  | LCtrl | TO(0) | LSht  |  LAlt | #Spc  | LWin  |  ---  |  ---  |  --- | 
            bindings = <
            &none   &kp ESC    &kp N1   &kp N2         &kp N3     &kp KP_DOT  &kp Y         &kp U     &kp MINUS  &kp EQUAL  &kp GRAVE    &none 
            &none   &kp LSHFT  &kp N4   &kp N5         &kp N6     &kp N0      &kp C_VOL_UP  &kp J     &kp LBKT   &kp LBRC   &kp NUBS     &none  
            &none   &kp LWIN   &kp N7   &kp N8         &kp N9     &kp BSPC    &kp C_VOL_DN  &kp M     &kp SEMI   &kp APOS   &kp DEL      &none
            &none   &none     &none     &mt LALT CAPS  &kp LCTRL  &to 0       &kp BSPC      &kp ENTER &kp LWIN   &none      &none        &none
             >;
		};

		fn2_layer {
            // | --- |   ~   |   %   |   _   |   ^   |   <   |   >   |  Home |   Up  |  End  | PgUp  |  --- |
            // | --- |   @   |   "   |   !   |   ?   |   (   |   )   |  Left |   Dn  | Right | PgDn  |  --- |
            // | --- |   [   |   ]   |   '   |   &   |   =   |   /   | ^!+/  |  Esc  |  Tab  | !#Del |  --- |       // | --- |  ---  |  ---  | LCtrl | #Spc  | LSht  |  LAlt | TO(0) | LWin  |  ---  |  ---  |  --- | 
            bindings = <
            &none  &kp Q        &kp F1    &kp F2        &kp F3  &kp F4     &kp Y      &kp HOME   &kp UP     &kp END    &kp PG_UP   &none 
            &none  &kp LSHFT    &kp F5    &kp F6        &kp F7  &kp F8     &kp PG_UP  &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN   &none 
            &none  &mt LCTRL Z  &kp F9    &kp F10       &kp F11 &kp F12    &kp N      &kp M      &kp COMMA  &KP_DOT    &kp DEL     &none 
            &none  &none        &none     &mt LALT CAPS &kp TAB &kp SPACE  &kp BSPC   &to ENTER  &kp LWIN   &none      &none       &none
            >;
		};

		fn3_layer {
            // | --- |  BT1  |   F9  |  F10  |  F11  |  F12  |  ^!+- |  ^!+= | VolUp |S-lock | N-lock|  --- |
            // | --- |  BT2  |   F5  |   F6  |   F7  |   F8  |  Prev |  Next | VolDn | Menu  | Insert|  --- |
            // | --- | BT-clr|   F1  |   F2  |   F3  |   F4  |  Mute |  Play | TO(0) |   ^   |  BL   |  --- |
            // | --- |  ---  |  ---  | LCtrl |  !+[  | LSht  |  LAlt |  !+]  | LWin  |  ---  |  ---  |  --- | 
            bindings = <
            &none   &bt BT_SEL 1  &kp F9  &kp F10   &kp F11   &kp F12   &kp C_VOL_DN   &kp C_VOL_UP  &kp INS          &kp K_CMENU    &kp KP_NLCK    &none 
            &none   &bt BT_SEL 2  &kp F5  &kp F6    &kp F7    &kp F8    &kp C_PREV     &kp C_NEXT    &kp PAUSE_BREAK  &kp PSCRN      &kp SLCK       &none 
            &none   &bt BT_CLR    &kp F1  &kp F2    &kp F2    &kp F4    &kp C_MUTE     &kp C_PP      &to 0            &kp RC(RS(X))  &kp RC(RS(O))  &none 
            &none   &none         &none   &kp LCTRL &none     &kp LSHFT &kp LALT       &mo 5         &kp LWIN         &none          &none          &none
            >;
		};

		fn4_layer {
            bindings = <
		&none   &kp LS(LC(LA(Q)))  &kp LS(LC(LA(W)))  &kp LS(LC(LA(E)))  &kp LS(LC(LA(R)))  &kp LS(LC(LA(T)))   &kp LS(LC(LA(Y)))  &kp LS(LC(LA(U)))  &kp LS(LC(LA(I)))     &kp LS(LC(LA(O)))  &kp LS(LC(LA(P)))     &none    
		&none   &kp LS(LC(LA(A)))  &kp LS(LC(LA(S)))  &kp LS(LC(LA(D)))  &kp LS(LC(LA(F)))  &kp LS(LC(LA(G)))   &kp LS(LC(LA(H)))  &kp LS(LC(LA(J)))  &kp LS(LC(LA(K)))     &kp LS(LC(LA(L)))  &kp LS(LC(LA(ENTER))) &none     
		&none   &kp LS(LC(LA(Z)))  &kp LS(LC(LA(X)))  &kp LS(LC(LA(C)))  &kp LS(LC(LA(V)))  &kp LS(LC(LA(B)))   &kp LS(LC(LA(N)))  &kp LS(LC(LA(M)))  &kp LS(LC(LA(COMMA))) &to 0              &kp LS(LC(LA(BSPC)))  &none     
		&none   &kp LS(LC(LA(N1))) &kp LS(LC(LA(N2))) &kp LS(LC(LA(N3))) &kp LS(LC(LA(N4))) &kp LS(LC(LA(N5)))  &kp LS(LC(LA(N6))) &kp LS(LC(LA(N7))) &kp LS(LC(LA(N8)))    &kp LS(LC(LA(N9))) &kp LS(LC(LA(N0)))    &none   
            >;
		};

		fn5_layer {
            bindings = <
		&none   &kp LS(LC(LA(LG(Q)))) &kp LS(LC(LA(LG(W)))) &kp LS(LC(LA(LG(E)))) &kp LS(LC(LA(LG(R)))) &kp LS(LC(LA(LG(T))))   &kp LA(F4)      &kp LA(TAB)   &mkp LCLK             &kp RA(RG(UP))     &mkp RCLK          &none    
		&none   &kp LS(LC(LA(LG(A)))) &kp LS(LC(LA(LG(S)))) &kp LS(LC(LA(LG(D)))) &kp LS(LC(LA(LG(F)))) &kp LS(LC(LA(LG(G))))   &kp LC(W)       &kp LC(T)     &kp RA(RG(LEFT))      &kp RA(RG(DOWN))   &kp RA(RG(RIGHT))  &none    
		&none   &kp LS(LC(LA(LG(Z)))) &kp LS(LC(LA(LG(X)))) &kp LS(LC(LA(LG(C)))) &kp LS(LC(LA(LG(V)))) &kp LS(LC(LA(LG(B))))   &kp RC(RS(TAB)) &kp LC(TAB)   &mkp MB4              &mkp MB5           &mkp MB3           &none   
		&none   &kp LS(LC(LA(LG(1)))) &kp LS(LC(LA(LG(2)))) &kp LS(LC(LA(LG(3)))) &kp LS(LC(LA(LG(4)))) &kp LS(LC(LA(LG(5))))   &bootloader     &to 0         &kp LS(LC(LA(RBRC)))  &none              &none              &none   
            >;
		};
	};
};

